--* HR 계정에서
select *from employees;

-- 1. 연도별로 입사자들의 최소급여, 최대 급여, 급여의 총합 그리고 평균 급여를 구하시오
SELECT  to_char(hire_date, 'YYYY') YEAR,  SUM(SALARY) ,  MAX( SALARY) ,  MIN(SALARY) ,  ROUND(AVG(SALARY),0 ) 
FROM employees  GROUP BY TO_CHAR(HIRE_DATE, 'YYYY') ;

-- 2. 부서별 평균 급여가 $10,000 이상인 부서만 구하시오. ( 평균급여가 높은 순으로 )
SELECT d.DEPARTMENT_NAME,round (avg(salary),0)
FROM employees e INNER JOIN departments d 
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
group by d.DEPARTMENT_NAME 
having avg(e.salary)>=10000
order by avg(e.salary)desc;

-- 3. 부서별 최대 급여를 구하시오.  해당되는 부서번호는 10번과 20번임
SELECT MAX(SALARY) MAX, DEPARTMENT_ID
FROM employees
WHERE DEPARTMENT_ID=10 OR DEPARTMENT_ID=20
GROUP BY DEPARTMENT_ID;

--4. 이름의 성이 'King' 사원의 사번과 부서명을 출력 ( employees, departments )
SELECT LAST_NAME, EMPLOYEE_ID, DEPARTMENT_ID
FROM employees
WHERE LAST_NAME = 'King';

--5. 이름의 성이 'King' 사원의 사번과 부서명 그리고 업무명을 출력 ( employees, departments, jobs )
SELECT e. last_name, e.employee_id, d.DEPARTMENT_NAME,  j.job_title
FROM employees e  INNER JOIN jobs j 
ON e.JOB_ID = j.JOB_ID
INNER JOIN departments d
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE e.LAST_NAME = 'King';

--6. 2007년 상반기에 입사한 사원들의 사번과 이름, 입사일 그리고 부서명을 출력
 --(*) Grant는 아직 부서가 배정받지 못한 상태이지만 Grant도 출력되려면
SELECT  e.employee_id,  e.first_name || e.last_name fullname, e.hire_date, d.department_name
FROM employees e  LEFT OUTER  JOIN departments d
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE to_char(hire_date, 'YYYY-MM') <= '2007-06'
AND to_char(hire_date, 'YYYY-MM') >= '2007-01';

--7. 'Executive' 부서에서 사원과 해당 사원의 관리자 이름을 출력
 --(*) 관리자가 없는 사원인 'King'이 출력되려면
 select *from departments;
select *from employees;

SELECT e1.employee_id, d.department_name, 
e1.first_name || ' ' || e1.laSst_name name,
e1.manager_id, e2.first_name || ' ' || e2.last_name manager_name
FROM employees e1 
LEFT OUTER JOIN employees e2
ON e1.manager_id=e2.employee_id
LEFT OUTER JOIN departments d
ON e1.department_id=d.department_id
WHERE d.department_name='Executive';

SELECT e.first_name || e.last_name full_name, e2.first_name || e2.last_name full_name
FROM employees e 
LEFT OUTER JOIN employees e2
ON (e.manager_id = e2.employee_id) 
LEFT OUTER JOIN departments d
ON (e.department_id = d.department_id)
WHERE d.department_name = 'Executive';
 
 